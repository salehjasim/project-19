export declare const enum MozJpegColorSpace {
    GRAYSCALE = 1,
    RGB = 2,
    YCbCr = 3
}
export interface MozJPEGEncodeOptions {
    quality: number;
    baseline: boolean;
    arithmetic: boolean;
    progressive: boolean;
    optimize_coding: boolean;
    smoothing: number;
    color_space: MozJpegColorSpace;
    quant_table: number;
    trellis_multipass: boolean;
    trellis_opt_zero: boolean;
    trellis_opt_table: boolean;
    trellis_loops: number;
    auto_subsample: boolean;
    chroma_subsample: number;
    separate_chroma_quality: boolean;
    chroma_quality: number;
}
export interface WebPEncodeOptions {
    quality: number;
    target_size: number;
    target_PSNR: number;
    method: number;
    sns_strength: number;
    filter_strength: number;
    filter_sharpness: number;
    filter_type: number;
    partitions: number;
    segments: number;
    pass: number;
    show_compressed: number;
    preprocessing: number;
    autofilter: number;
    partition_limit: number;
    alpha_compression: number;
    alpha_filtering: number;
    alpha_quality: number;
    lossless: number;
    exact: number;
    image_hint: number;
    emulate_jpeg_size: number;
    thread_level: number;
    low_memory: number;
    near_lossless: number;
    use_delta_palette: number;
    use_sharp_yuv: number;
}
export declare const enum AVIFTune {
    auto = 0,
    psnr = 1,
    ssim = 2
}
export interface AvifEncodeOptions {
    cqLevel: number;
    denoiseLevel: number;
    cqAlphaLevel: number;
    tileRowsLog2: number;
    tileColsLog2: number;
    speed: number;
    subsample: number;
    chromaDeltaQ: boolean;
    sharpness: number;
    tune: AVIFTune;
}
export interface JxlEncodeOptions {
    effort: number;
    quality: number;
    progressive: boolean;
    epf: number;
    lossyPalette: boolean;
    decodingSpeedTier: number;
    photonNoiseIso: number;
}
export declare const enum UVMode {
    UVModeAdapt = 0,
    UVMode420 = 1,
    UVMode444 = 2,
    UVModeAuto = 3
}
export declare const enum Csp {
    kYCoCg = 0,
    kYCbCr = 1,
    kCustom = 2,
    kYIQ = 3
}
export interface WP2EncodeOptions {
    quality: number;
    alpha_quality: number;
    effort: number;
    pass: number;
    sns: number;
    uv_mode: UVMode;
    csp_type: Csp;
    error_diffusion: number;
    use_random_matrix: boolean;
}
export interface OxiPngEncodeOptions {
    level: number;
}
