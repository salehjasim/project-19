import { InitializeOptions, Extension, HookContext } from '../../types/extensions';
export declare class DefaultOptionsExtension implements Extension {
    name: string;
    order: number;
    initialize(_: HookContext, baseOptions: InitializeOptions): {
        extensions: Extension<import("../..").Codecs>[] | ((defaultExtensions: Extension<import("../..").Codecs>[]) => Extension<import("../..").Codecs>[]);
        encoderOptions: Partial<import("../..").MozJPEGEncodeOptions> | Partial<import("../..").WebPEncodeOptions> | Partial<import("../..").AvifEncodeOptions> | Partial<import("../..").JxlEncodeOptions> | Partial<import("../..").WP2EncodeOptions> | Partial<import("../..").OxiPngEncodeOptions>;
        codec: import("../..").Codecs;
        useWorker: boolean;
        requestPrefix?: string | undefined;
        include?: RegExp | RegExp[] | undefined;
        exclude?: RegExp | RegExp[] | undefined;
        dirs?: string[] | undefined;
        outDir?: string | undefined;
        uuidNamespace: string;
        preserveFileName?: boolean | undefined;
    };
}
